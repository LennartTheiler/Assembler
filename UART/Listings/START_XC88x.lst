A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\START_XC88x.obj
ASSEMBLER INVOKED BY: C:\Users\lenna\OneDrive\Desktop\Studium\2. Semester\MCT\C51\BIN\A51.EXE START_XC88x.A51 SET(SMALL)
                       DEBUG PRINT(.\Listings\START_XC88x.lst) OBJECT(.\Objects\START_XC88x.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Startup Code for the Infineon XC88x devices 
                       5     ;  Copyright (C) 2010 ARM Limited. All rights reserved.
                       6     ;  Version 1.05
                       7     ;
                       8     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       9     ;------------------------------------------------------------------------------
                      10     ;  STARTUP.A51:  This code is executed after processor reset.
                      11     ;
                      12     ;  To translate this file use A51 with the following invocation:
                      13     ;
                      14     ;     A51 START_XC88x.A51
                      15     ;
                      16     ;  To link the modified START_XC88x.OBJ file to your application use the following
                      17     ;  Lx51 invocation:
                      18     ;
                      19     ;     Lx51 your object file list, START_XC88x.OBJ  controls
                      20     ;
                      21     ;------------------------------------------------------------------------------
                      22     ;
                      23     ;<e> Use off-chip XTAL
                      24     ;<i> XC8xx series runs by default from on-chip oscillator.
                      25     ;<i> optionally you may use a off-chip XTAL
                      26     ;
  0000                27     XTAL          EQU   0     ; set to 0 for on-chip oscillator, 1 for external clock
                      28     ;
                      29     ;---------------------------------------------------------------------
                      30     ;
                      31     ; <o> PLL N-Divider
                      32     ; <i> PLL N-Divider must result in fsys = 96MHz for 'NON-SAL' (e.g. SAK, SAF, SAA) devices
                      33     ; <i> PLL N-Divider must result in fsys = 80MHz for 'SAL' devices
                      34     ; <0=>  N=10
                      35     ; <1=>  N=12 
                      36     ; <2=>  N=13
                      37     ; <3=>  N=14
                      38     ; <4=>  N=15
                      39     ; <5=>  N=16 (12 MHz XTAL 'NON-SAL' / 10 MHz On-Chip XTAL 'SAL')
                      40     ; <6=>  N=17
                      41     ; <7=>  N=18
                      42     ; <8=>  N=19
                      43     ; <9=>  N=20 (9.6 MHz On-Chip XTAL 'NON-SAL' / 8 MHz XTAL 'SAL')
                      44     ; <10=> N=24 (8 MHz XTAL 'NON-SAL')
                      45     ; <11=> N=30
                      46     ; <12=> N=32 (6 MHz XTAL 'NON-SAL' / 5 MHz XTAL 'SAL')
                      47     ; <13=> N=36
                      48     ; <14=> N=40 (4 MHz XTAL 'SAL')
                      49     ; <15=> N=48 (4 MHz XTAL 'NON-SAL')
                      50     ;
  000A                51     NDIV               EQU      10   ; default 10 for 8 MHz XTAL for *NON-SAL* device
                      52     ;</e>
                      53     
                      54     ;------------------------------------------------------------------------------
                      55     ;
                      56     ;  User-defined <h> Power-On Initialization of Memory
                      57     ;
A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     2

                      58     ;  With the following EQU statements the initialization of memory
                      59     ;  at processor reset can be defined:
                      60     ;
                      61     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      62     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      63     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0100                64     IDATALEN        EQU     0x100
                      65     ;
                      66     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      67     ;     <i> The absolute start address of XDATA memory
  F000                68     XDATASTART      EQU     0xF000     
                      69     ;
                      70     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      71     ;     <i> The length of XDATA memory in bytes.
  0600                72     XDATALEN        EQU     0x600 
                      73     ;
                      74     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      75     ;     <i> The absolute start address of PDATA memory
  F000                76     PDATASTART      EQU     0xF000
                      77     ;
                      78     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      79     ;     <i> The length of PDATA memory in bytes.
  0000                80     PDATALEN        EQU     0
                      81     ;
                      82     ; </h>
                      83     ;------------------------------------------------------------------------------
                      84     ;
                      85     ; <h> Reentrant Stack Initialization
                      86     ;
                      87     ;  The following EQU statements define the stack pointer for reentrant
                      88     ;  functions and initialize it:
                      89     ;
                      90     ; <h> Stack Space for reentrant functions in the SMALL model.
                      91     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
                      92     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                93     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      94     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      95     ;     <i> Set the top of the stack to the highest location.
  0100                96     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      97     ; </h>
                      98     ;
                      99     ; <h> Stack Space for reentrant functions in the LARGE model.      
                     100     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                     101     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000               102     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                     103     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                     104     ;     <i> Set the top of the stack to the highest location.
  0000               105     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                     106     ; </h>
                     107     ;
                     108     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                     109     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                     110     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000               111     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                     112     ;
                     113     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                     114     ;     <i> Set the top of the stack to the highest location.
  0100               115     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                     116     ; </h>
                     117     ; </h>
                     118     ;------------------------------------------------------------------------------
                     119     ;
                     120     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                     121     ;  <e>Compact Model Page Definition
                     122     ;
                     123     ;  <i>Define the XDATA page used for PDATA variables. 
A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     3

                     124     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                     125     ;
                     126     ; Enable pdata memory page initalization
  0000               127     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                     128     ;
                     129     ; <o> PPAGE number <0x0-0xFF> 
                     130     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  00F0               131     PPAGE           EQU     0xF0
                     132     ;
                     133     ; </e>
                     134     ;------------------------------------------------------------------------------
                     135     
                     136     ; Standard SFR Symbols 
  00E0               137     ACC     DATA    0E0H
  00F0               138     B       DATA    0F0H
  0081               139     SP      DATA    81H
  0082               140     DPL     DATA    82H
  0083               141     DPH     DATA    83H
                     142     
                     143     ; XC8xx specific SFR Symbols used in STARTUP code
  00BF               144     sfr  SCU_PAGE = 0xBF
  00B7               145     sfr  PLL_CON  = 0xB7
  00EA               146     sfr  PLL_CON1 = 0xEA;//SCU,RMAP=0,Page=1
  00BA               147     sfr  CMCON    = 0xBA
  00B6               148     sfr  OSC_CON  = 0xB6
  00BB               149     sfr  PASSWD   = 0xBB
  00B3               150     sfr  XADDRH   = 0xB3
  0096               151     sfr  MEX3     = 0x96
                     152     
                     153                     NAME    ?C_STARTUP
                     154     
                     155     ?C_C51STARTUP   SEGMENT   CODE
                     156     ?STACK          SEGMENT   IDATA
                     157     
----                 158                     RSEG    ?STACK
0000                 159                     DS      1
                     160     
                     161                     EXTRN CODE (?C_START)
                     162                     PUBLIC  ?C_STARTUP
                     163     
----                 164                     CSEG    AT      0
0000 020000   F      165     ?C_STARTUP:     LJMP    STARTUP1
                     166     
----                 167                     RSEG    ?C_C51STARTUP
                     168     
0000                 169     STARTUP1:
                     170     
                     171     IF (XTAL <> 0)       
                                             ; switch to external XTAL
                                             MOV     SCU_PAGE,#1
                                             ORL     PLL_CON, #0x08  ; VCOBYP = 1 
                                             ORL     PLL_CON, #0x04  ; OSCDISC = 1   _ _ _ NDIV, VCOBYP, OSCDISC, RESLD,
                              LOCK
                                             ANL     OSC_CON, #0xF7  ; XPD = 0       power xtal
                                             ORL     OSC_CON, #0x04  ; OSCSS = 1     0, 0, 0, OSCPD, XPD, OSCSS, ORDRES,
                              OSCR
                                             ;all calculations are based on no wait state
                                             MOV     R1,#0
                             DelayXTAL0:
                                             MOV     R0,#10         ; delay necssary for external clock to stablise (amp
                             litude >= 0.4 * VDDC - refer to product data sheet)
                             DelayXTAL:      ; delay time should be adjusted according to different external osciallators
                                             DJNZ    R1,$
                                             DJNZ    R0,DelayXTAL
                                             
                                             ; redetection of osc
A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     4

                             OSCR_NOTSET:    
                                             MOV     R0, #86
                                             ORL     OSC_CON, #0x02  ; ORDRES = 1    ;restart oscillator run detection
                                             ;assume no wait state, K = 2, 
                                             ;Apollo requires to wait for 256 clock cycles -> 2048 vco cycles
                                             ;Elektra requires to wait for 342 clock cycles -> 2048 vco cycles 
                                             ;djnz = 4 cc
                                             DJNZ    R0, $
                                             MOV     A,OSC_CON
                                             JNB     ACC.0, OSCR_NOTSET  
                             
                                             ;reprogram the NDIV factor to required value
                                             ;ORL     PLL_CON, #0x08      ; VCOBYP = 1 to change N-Divider
                                             MOV     PASSWD,  #0x98      ; open access to writing protected bit
                                             ANL     PLL_CON, #0x0F
                                             ORL     PLL_CON, #NDIV*16
                                             ANL     PLL_CON, #0xFB      ; OSCDISC = 0, reconnect oscillator to the PLL
                             
                                             ;PLL lock detection
                                             ORL     PLL_CON, #0x02     ; detect PLL lock
                                             MOV     R0, #100           ; LOCK flag should be set within 200us, user nee
                             d to adapt accordingly
                                                                        ; assume a 10MHz XTAL for XC866/XC864 device
                                                                        ; device is in prescaler mode, k = 2 therefore f
                             sys = 5MHz
                                                                        ; ## 1cclk = 1/(5MHz/3) = 600 ns
                                                                        ; DJNZ requires 4 x 600ns = 2.4 us therefore 100
                              DJNZ -> 240us
                                                                        ; for XC88x, the factor 3 (##) is changed to 4 t
                             hen the calculated value is 
                                                                        ; 320 us based on a 10MHz XTAL
                             WAIT_LOCK:
                                             DJNZ    R0, $
                                             MOV     A, PLL_CON
                                             JNB     ACC.0, OSCR_NOTSET
                                             ; reconnect to PLL
                                             ANL     PLL_CON, #0xF7   ; VCOBYP = 0
                                             MOV     SCU_PAGE,#0        
                             ENDIF
                     222     
                     223     IF IDATALEN <> 0
0000 78FF            224                     MOV     R0,#IDATALEN - 1
0002 E4              225                     CLR     A
0003 F6              226     IDATALOOP:      MOV     @R0,A
0004 D8FD            227                     DJNZ    R0,IDATALOOP
                     228     ENDIF
                     229     
                     230     IF XDATALEN <> 0
0006 90F000          231                     MOV     DPTR,#XDATASTART
0009 7F00            232                     MOV     R7,#LOW (XDATALEN)
                     233             IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                                     ELSE
000B 7E06            236                     MOV     R6,#HIGH (XDATALEN)
                     237             ENDIF
000D E4              238                     CLR     A
000E F0              239     XDATALOOP:      MOVX    @DPTR,A
000F A3              240                     INC     DPTR
0010 DFFC            241                     DJNZ    R7,XDATALOOP
0012 DEFA            242                     DJNZ    R6,XDATALOOP
                     243     ENDIF
                     244     
                     245     IF PPAGEENABLE <> 0
                                             MOV     SCU_PAGE,#3 
                                             MOV     XADDRH,#PPAGE              
                                             MOV     SCU_PAGE,#0 
A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     5

                             ENDIF
                     250     
                     251     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     259     
                     260     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     265     
                     266     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     272     
                     273     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     277     
0014 758100   F      278                     MOV     SP,#?STACK-1
                     279     
0017 020000   F      280                     LJMP    ?C_START
                     281     
                     282     ; Overwrite ?C?DPSEL address for XC8xx Device
                     283     PUBLIC ?C?DPSEL
  00A2               284     ?C?DPSEL        DATA    0A2H   ; DPSEL address for Mentor M8051EW
                     285     
                     286                     END
A51 MACRO ASSEMBLER  START_XC88X                                                          07/10/2024 13:41:25 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C?DPSEL . . . . .  D ADDR   00A2H   A   
?C_C51STARTUP. . .  C SEG    001AH       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   0000H   A   
?STACK . . . . . .  I SEG    0001H       REL=UNIT
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CMCON. . . . . . .  D ADDR   00BAH   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   0100H   A   
IDATALOOP. . . . .  C ADDR   0003H   R   SEG=?C_C51STARTUP
MEX3 . . . . . . .  D ADDR   0096H   A   
NDIV . . . . . . .  N NUMB   000AH   A   
OSC_CON. . . . . .  D ADDR   00B6H   A   
PASSWD . . . . . .  D ADDR   00BBH   A   
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   0000H   A   
PDATASTART . . . .  N NUMB   F000H   A   
PLL_CON. . . . . .  D ADDR   00B7H   A   
PLL_CON1 . . . . .  D ADDR   00EAH   A   
PPAGE. . . . . . .  N NUMB   00F0H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
SCU_PAGE . . . . .  D ADDR   00BFH   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
XADDRH . . . . . .  D ADDR   00B3H   A   
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   0600H   A   
XDATALOOP. . . . .  C ADDR   000EH   R   SEG=?C_C51STARTUP
XDATASTART . . . .  N NUMB   F000H   A   
XTAL . . . . . . .  N NUMB   0000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
